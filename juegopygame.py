# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JjZM7Xy6VKRzC4jHWo3P3gmhUH7J1vSP
"""

import pygame
import random
import sys

# Inicialización de PyGame
pygame.init()

# Constantes de la pantalla y FPS
ANCHO, ALTO = 800, 600
FPS = 60

# Colores
NEGRO = (0, 0, 0)
BLANCO = (255, 255, 255)
ROJO = (255, 0, 0)

# Configuración de la pantalla
screen = pygame.display.set_mode((ANCHO, ALTO))
pygame.display.set_caption("Escape de los Enemigos")
clock = pygame.time.Clock()

# Rectángulo del jugador
player_rect = pygame.Rect(375, 500, 50, 50)

# Lista para almacenar los enemigos
enemigos = []

def spawn_enemy():
    """Crea un enemigo en una posición horizontal aleatoria en la parte superior."""
    enemy_size = 40
    x = random.randint(0, ANCHO - enemy_size)
    enemy_rect = pygame.Rect(x, 0, enemy_size, enemy_size)
    enemigos.append(enemy_rect)

def draw_enemies():
    """Dibuja todos los enemigos en pantalla."""
    for enemy in enemigos:
        pygame.draw.rect(screen, ROJO, enemy)

def update_enemies():
    """Actualiza la posición de los enemigos y elimina los que salen de la pantalla."""
    for enemy in enemigos:
        enemy.y += 5  # Velocidad del enemigo
    # Se eliminan los enemigos que ya han salido de la pantalla
    enemigos[:] = [enemy for enemy in enemigos if enemy.y < ALTO]

def menu_principal():
    """Muestra el menú principal esperando que el jugador presione ENTER para comenzar."""
    menu = True
    font = pygame.font.SysFont(None, 50)
    texto = font.render("Presiona ENTER para jugar", True, BLANCO)

    while menu:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_RETURN:
                    menu = False

        screen.fill(NEGRO)
        # Centramos el texto en la pantalla
        texto_rect = texto.get_rect(center=(ANCHO // 2, ALTO // 2))
        screen.blit(texto, texto_rect)
        pygame.display.flip()
        clock.tick(FPS)

def game_loop():
    """Bucle principal del juego."""
    running = True
    spawn_timer = 0  # Temporizador para crear enemigos

    while running:
        clock.tick(FPS)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        # Manejo del movimiento del jugador con las teclas de dirección
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and player_rect.left > 0:
            player_rect.x -= 5
        if keys[pygame.K_RIGHT] and player_rect.right < ANCHO:
            player_rect.x += 5
        if keys[pygame.K_UP] and player_rect.top > 0:
            player_rect.y -= 5
        if keys[pygame.K_DOWN] and player_rect.bottom < ALTO:
            player_rect.y += 5

        # Control de tiempo para la aparición de enemigos (aprox. cada 1 segundo)
        spawn_timer += 1
        if spawn_timer > FPS:
            spawn_enemy()
            spawn_timer = 0

        # Actualiza la posición de los enemigos
        update_enemies()

        # Verifica colisiones entre el jugador y los enemigos
        for enemy in enemigos:
            if player_rect.colliderect(enemy):
                running = False

        # Dibujado en pantalla
        screen.fill(NEGRO)
        pygame.draw.rect(screen, BLANCO, player_rect)
        draw_enemies()
        pygame.display.flip()

    # Pantalla de Game Over
    font = pygame.font.SysFont(None, 74)
    texto_game_over = font.render("Game Over", True, ROJO)
    screen.fill(NEGRO)
    texto_rect = texto_game_over.get_rect(center=(ANCHO // 2, ALTO // 2))
    screen.blit(texto_game_over, texto_rect)
    pygame.display.flip()
    pygame.time.wait(2000)

def main():
    menu_principal()
    game_loop()
    pygame.quit()

if __name__ == '__main__':
    main()